<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SubscriptionMapper">

	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
        	<foreach collection="typeArr" item="type">
            	<trim prefix="OR">
                	<choose>
                    	<when test="type == 'C'.toString()"> 
                     		mem_company LIKE '%'||#{keyword}||'%'
                  		</when>
                  		<when test="type == 'A'.toString()">
                     		sbs_alias LIKE '%'||#{keyword}||'%'
                  		</when>
               		</choose>
            	</trim>
         	</foreach>
      	</trim>
<!--       	<trim prefix="(" suffix=") AND" prefixOverrides="OR">
        	<foreach collection="gradeArr" item="grade">
            	<trim prefix="OR">
                	<choose>
                    	<when test="grade == 'standard'.toString()">
                     		sbs_status LIKE '%standard%'
                  		</when>
               		</choose>
            	</trim>
         	</foreach>
      	</trim> -->
      	<trim prefix="(" suffix=") AND" prefixOverrides="OR">
        	<foreach collection="statusArr" item="status">
            	<trim prefix="OR">
                	<choose>
                    	<when test="status == 'Y'.toString()">
                     		s.sbs_status LIKE '%Y%'
                  		</when>
                  		<when test="status == 'N'.toString()">
                     		s.sbs_status LIKE '%N%'
                  		</when>
               		</choose>
            	</trim>
         	</foreach>
      	</trim>
	</sql>
	
	<sql id="memCri">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
        	<foreach collection="typeArr" item="type">
            	<trim prefix="OR">
                	<choose>
                    	<when test="type == 'A'.toString()"> 
                     		sbs_alias LIKE '%'||#{keyword}||'%'
                  		</when>
                  		<when test="type == 'L'.toString()">
                     		sbs_loc LIKE '%'||#{keyword}||'%'
                  		</when>
               		</choose>
            	</trim>
         	</foreach>
      	</trim>
	</sql>
	
   	<select id="list" resultType="com.sansam.adeye.domain.SubscriptionDTO">
   		<![CDATA[
			SELECT	sbs_seq,
					mem_id,
					device_seq,
					mem_company,
					sbs_loc,
					sbs_alias,
					sbs_start_dt,
					sbs_end_dt,
					sbs_reg_dt,
					sbs_grade,
					sbs_status,
					d_day
			FROM (
				SELECT
					rownum rn,
					s.sbs_seq,
					s.mem_id,
					s.device_seq,
					s.mem_company,
					s.sbs_loc,
					s.sbs_alias,
					s.sbs_start_dt,
					s.sbs_end_dt,
					s.sbs_reg_dt,
					s.sbs_grade,
					s.sbs_status,
					s.d_day
				FROM  (
					SELECT
            			s.sbs_seq,
            			s.mem_id,
            			s.device_seq,
            			(select mem_company FROM tb_member m WHERE s.mem_id = m.mem_id) AS mem_company,
            			s.sbs_loc,
        				s.sbs_alias,
    					s.sbs_start_dt,
            			s.sbs_end_dt,
            			s.sbs_reg_dt,
            			s.sbs_grade,
            			s.sbs_status,
            			(SELECT TRUNC(s.sbs_end_dt) - TRUNC(SYSDATE) FROM dual) AS d_day
					FROM tb_subscription s
					LEFT JOIN tb_member m ON s.mem_id = m.mem_id
					WHERE s.sbs_status != 'D'
					ORDER BY sbs_status DESC, mem_company ASC, d_day ASC
				) s
				WHERE
		]]>
	  	<include refid="criteria"></include>         
      	<![CDATA[
      			rownum <= #{pageNum} * #{amount}
            )
         	WHERE rn > (#{pageNum} - 1) * #{amount}
      	]]>
   	</select>
   	
   	<select id="sbsListExpiry" resultType="com.sansam.adeye.domain.SubscriptionDTO">
   		<![CDATA[
			SELECT	sbs_seq,
					mem_id,
					device_seq,
					mem_company,
					sbs_loc,
					sbs_alias,
					sbs_start_dt,
					sbs_end_dt,
					sbs_reg_dt,
					sbs_grade,
					sbs_status,
					d_day
			FROM (
				SELECT
					rownum rn,
					s.sbs_seq,
					s.mem_id,
					s.device_seq,
					s.mem_company,
					s.sbs_loc,
					s.sbs_alias,
					s.sbs_start_dt,
					s.sbs_end_dt,
					s.sbs_reg_dt,
					s.sbs_grade,
					s.sbs_status,
					s.d_day
				FROM  (
					SELECT
            			s.sbs_seq,
            			s.mem_id,
            			s.device_seq,
            			(select mem_company FROM tb_member m WHERE s.mem_id = m.mem_id) AS mem_company,
            			s.sbs_loc,
        				s.sbs_alias,
    					s.sbs_start_dt,
            			s.sbs_end_dt,
            			s.sbs_reg_dt,
            			s.sbs_grade,
            			s.sbs_status,
            			(SELECT TRUNC(s.sbs_end_dt) - TRUNC(SYSDATE) FROM dual) AS d_day
					FROM tb_subscription s
					LEFT JOIN tb_member m ON s.mem_id = m.mem_id
					WHERE s.sbs_status != 'D'
					ORDER BY sbs_status DESC, mem_company ASC, d_day ASC
				) s
				WHERE s.d_day <= TO_NUMBER(#{seq}) AND
		]]>
	  	<include refid="criteria"></include>         
      	<![CDATA[
      			rownum <= #{pageNum} * #{amount}
            )
         	WHERE rn > (#{pageNum} - 1) * #{amount}
      	]]>
   	</select>

	<select id="memSbsList" resultType="com.sansam.adeye.domain.SubscriptionDTO" parameterType="com.sansam.adeye.domain.Criteria">
      <![CDATA[         
            SELECT   sbs_seq,
                sbs_alias,
                sbs_loc,
                sbs_total_man,
                sbs_total_interest,
                sbs_male_per,
                sbs_female_per,
                today_total_man,
                today_total_interest
         FROM (
            SELECT /*+ INDEX_DESC(tb_subscription IDX_tb_subscription_PK) */
                 rownum rn,
                 s.sbs_seq,
                 s.sbs_alias,
                 s.sbs_loc,
                 (SELECT COUNT(acq_seq) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq) AS sbs_total_man,
                 (SELECT COUNT(acq_interest) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq AND (acq_interest = 1 OR acq_interest = 2)) AS sbs_total_interest,
                 (SELECT COUNT(acq_gender) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq AND acq_gender = 'M') AS sbs_male_per,
                 (SELECT COUNT(acq_gender) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq AND acq_gender = 'W') AS sbs_female_per,
                 (SELECT COUNT(acq_seq) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq AND TRUNC(acq_end_dt) = TRUNC(sysdate)) AS today_total_man,
                 (SELECT COUNT(acq_interest) FROM tb_acquisition WHERE sbs_seq = s.sbs_seq AND (acq_interest = 1 OR acq_interest = 2) AND TRUNC(acq_end_dt) = TRUNC(sysdate)) AS today_total_interest
             FROM tb_subscription s, dual
             WHERE mem_id = #{seq} AND s.sbs_status = 'Y' AND
       ]]>
      <include refid="memCri"></include>         
         <![CDATA[
                rownum <= #{pageNum} * #{amount}
           )
         WHERE rn > (#{pageNum} - 1) * #{amount}
      ]]>
   	</select>
	
	<select id="memSbsData" resultType="com.sansam.adeye.domain.SubscriptionDTO" parameterType="com.sansam.adeye.domain.Criteria">
		SELECT DISTINCT
				mem_company, 
				sbs_total
		FROM (
    		SELECT DISTINCT
        		(SELECT m.mem_company FROM tb_subscription s INNER JOIN tb_member m ON s.mem_id = m.mem_id WHERE m.mem_id = #{seq} AND ROWNUM = 1) AS mem_company,
        		(SELECT COUNT(sbs_seq) FROM tb_subscription WHERE mem_id = #{seq} AND sbs_status = 'Y') AS sbs_total
    		FROM tb_subscription)
	</select>
	
	
	<insert id="create">
  		insert into tb_subscription (mem_id,device_seq,sbs_loc,sbs_alias,sbs_start_dt,sbs_end_dt,sbs_reg_dt,sbs_grade,sbs_status) values (#{mem_id},#{device_seq},#{sbs_loc},#{sbs_alias},#{sbs_start_dt},#{sbs_end_dt},sysdate,#{sbs_grade},#{sbs_status})
  	</insert>
  	
  	<select id="detail" resultType="com.sansam.adeye.domain.SubscriptionDTO">
  		SELECT s.sbs_seq, s.mem_id, m.mem_company, s.device_seq, s.sbs_loc, s.sbs_alias, s.sbs_status, s.sbs_start_dt, s.sbs_end_dt, s.sbs_grade, (SELECT TRUNC(s.sbs_end_dt) - TRUNC(SYSDATE) FROM dual) AS d_day FROM tb_subscription s, tb_member m WHERE m.mem_id = s.mem_id AND s.sbs_seq = #{sbs_seq} 
  	</select>

	<update id="update" parameterType="com.sansam.adeye.domain.SubscriptionDTO">
		update tb_subscription set device_seq = #{device_seq}, sbs_loc = #{sbs_loc}, sbs_alias = #{sbs_alias}, sbs_end_dt = #{sbs_end_dt}, sbs_grade = #{sbs_grade}, sbs_status = #{sbs_status} WHERE sbs_seq = #{sbs_seq}
	</update>

	<update id="delete">
		update tb_subscription set sbs_status = 'D' where sbs_seq = #{sbs_seq}
	</update>
	
	<select id="totalCnt" resultType="int">
		SELECT COUNT(*)
		FROM tb_subscription s
		LEFT JOIN tb_member m ON s.mem_id = m.mem_id
		WHERE 
		<include refid="criteria"></include>
		s.sbs_status != 'D'
	</select>
	
	<select id="memSbsCnt">
		SELECT COUNT(*)
		FROM tb_subscription s, dual
        WHERE   
		<include refid="memCri"></include>
		mem_id = #{seq}
		AND s.sbs_status = 'Y'
	</select>

</mapper>